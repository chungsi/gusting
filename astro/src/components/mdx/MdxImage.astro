---
import { Picture } from 'astro:assets'
import clsx from 'clsx'

import type { ImageMetadata } from 'astro'
import type { HTMLAttributes } from 'astro/types'

type Props = {
  src: ImageMetadata
  caption?: string
  shadow?: boolean
  offset?: 'full' | 'half' | 'max-text' | undefined
} & HTMLAttributes<'img'>

const { src, caption, shadow, offset }: Props = Astro.props

let offsetClasses = ''
switch (offset) {
  case 'full':
    offsetClasses = '-mx-[calc(var(--space-container-offset)_-_1rem)]'
    break
  case 'half':
    offsetClasses = '-mx-[calc(var(--space-container-offset)_/_2_-_1rem)]'
    break
  case 'max-text':
    offsetClasses = 'max-w-[var(--max-text-width)]'
    break
  default:
    break
}
---

<figure class='relative mt-lg'>
  {/* NOTE/TODO: Some weird 'sizes' progessions because of my layout; be sure to update if layout changes */}
  <Picture
    src={src}
    alt={caption as string}
    class={clsx(shadow && 'shadow-lg', offsetClasses)}
    widths={[600, 900, 1024]}
    sizes={`(max-width: 600px) 600px, (max-width: 900px) 900px, (max-width: 1024px) 1024px, 900px`}
  />
  {caption && <figcaption class='text-sm text-gray-400 my-sm'>{caption}</figcaption>}
</figure>
