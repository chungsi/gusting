---
import type { ImageMetadata } from 'astro'
import type { HTMLAttributes } from 'astro/types'
import { Image } from 'astro:assets'
import clsx from 'clsx'

type Props = {
  src: ImageMetadata
  caption?: string
  shadow?: boolean
  offset?: 'full' | 'half' | 'max-text' | undefined
} & HTMLAttributes<'img'>

const { src, caption, shadow, offset }: Props = Astro.props

let offsetClasses = ''
switch (offset) {
  case 'full':
    offsetClasses = '-mx-[calc(var(--space-container-offset)_-_1rem)]'
    break
  case 'half':
    offsetClasses = '-mx-[calc(var(--space-container-offset)_/_2_-_1rem)]'
    break
  case 'max-text':
    offsetClasses = 'max-w-[var(--max-text-width)]'
  default:
    break
}
---

<article class='relative mt-lg'>
  <Image
    src={src}
    alt={caption as string}
    class={clsx(shadow && 'shadow-lg', offsetClasses)}
  />
  {caption && <p class='text-sm text-gray-400'>{caption}</p>}
</article>
