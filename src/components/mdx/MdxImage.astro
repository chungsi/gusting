---
import { Picture } from 'astro:assets'
import clsx from 'clsx'

import type { ImageMetadata } from 'astro'
import type { HTMLAttributes } from 'astro/types'

type Props = HTMLAttributes<'img'> & {
  src: ImageMetadata
  link?: boolean
  caption?: string
  shadow?: boolean
  offset?: 'full' | 'half' | 'max-text' | undefined
}

const { src, link, caption, shadow, offset }: Props = Astro.props

let offsetClasses = ''
switch (offset) {
  case 'full':
    offsetClasses = '-mx-[calc(var(--spacing-container-offset)_-_1rem)]'
    break
  case 'half':
    offsetClasses = '-mx-[calc(var(--spacing-container-offset)_/_2_-_1rem)]'
    break
  case 'max-text':
    offsetClasses = 'max-w-[var(--max-text-width)]'
    break
  default:
    break
}
---

<section class='mt-lg relative'>
  {
    /* NOTE/TODO: Some weird 'sizes' progessions because of my layout; be sure to update if layout changes */
  }
  <Picture
    src={src}
    alt={(caption as string) ?? ''}
    class={clsx(shadow && 'shadow-lg', offsetClasses)}
    formats={['avif', 'webp']}
    widths={[600, 900, 1024]}
    sizes={`(max-width: 600px) 600px, (max-width: 900px) 900px, (max-width: 1024px) 1024px, 900px`}
  />
  {
    link && (
      <a
        href={src.src}
        target='_blank'
        class=''
      >
        <span
          aria-hidden='true'
          class='absolute inset-0'
        />
      </a>
    )
  }
  {caption && <p class='my-sm text-sm text-gray-400'>{caption}</p>}
</section>
